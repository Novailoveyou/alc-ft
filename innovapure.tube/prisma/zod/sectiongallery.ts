import * as z from "zod"
import { Locale } from "@prisma/client"
import { CompleteSlide, RelatedSlideModel, CompletePage, RelatedPageModel } from "./index"

export const SectionGalleryModel = z.object({
  /**
   * The unique identifier for the lead
   * @default {Generated by database}
   */
  id: z.string(),
  /**
   * section locale
   */
  locale: z.nativeEnum(Locale),
  /**
   * whether SectionGallery is published
   */
  isPublished: z.boolean(),
  /**
   * section index
   */
  index: z.number().int(),
  /**
   * an element with border above the heading
   */
  strap: z.string().trim().min(1).max(80),
})

export interface CompleteSectionGallery extends z.infer<typeof SectionGalleryModel> {
  slides: CompleteSlide[]
  pages: CompletePage[]
}

/**
 * RelatedSectionGalleryModel contains all relations on your model in addition to the scalars
 *
 * NOTE: Lazy required in case of potential circular dependencies within schema
 */
export const RelatedSectionGalleryModel: z.ZodSchema<CompleteSectionGallery> = z.lazy(() => SectionGalleryModel.extend({
  /**
   * gallery slides 
   */
  slides: RelatedSlideModel.array(),
  /**
   * pages with this section
   */
  pages: RelatedPageModel.array(),
}))
