import * as z from "zod"
import { Locale } from "@prisma/client"
import { CompleteCategory, RelatedCategoryModel, CompletePage, RelatedPageModel } from "./index"

export const SectionCategoryModel = z.object({
  /**
   * The unique identifier for the record
   * @default {Generated by database}
   */
  id: z.string(),
  /**
   * locale of the record
   * @default {ru}
   */
  locale: z.nativeEnum(Locale),
  /**
   * whether record is published
   * @default {false}
   */
  isPublished: z.boolean(),
  /**
   * date of record creation
   * @default {now()}
   */
  createdAt: z.date(),
  /**
   * date of record update
   * @default {now()}
   */
  updatedAt: z.date(),
  categoryId: z.string(),
})

export interface CompleteSectionCategory extends z.infer<typeof SectionCategoryModel> {
  category: CompleteCategory
  pages: CompletePage[]
}

/**
 * RelatedSectionCategoryModel contains all relations on your model in addition to the scalars
 *
 * NOTE: Lazy required in case of potential circular dependencies within schema
 */
export const RelatedSectionCategoryModel: z.ZodSchema<CompleteSectionCategory> = z.lazy(() => SectionCategoryModel.extend({
  /**
   * section category
   */
  category: RelatedCategoryModel,
  /**
   * pages with this section
   */
  pages: RelatedPageModel.array(),
}))
