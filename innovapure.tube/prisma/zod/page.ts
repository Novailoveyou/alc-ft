import * as z from "zod"
import { PageName, Locale } from "@prisma/client"
import { CompleteHeader, RelatedHeaderModel, CompleteSectionGallery, RelatedSectionGalleryModel, CompleteSectionCatalog, RelatedSectionCatalogModel, CompleteFooter, RelatedFooterModel, CompleteSectionTestimonials, RelatedSectionTestimonialsModel } from "./index"

export const PageModel = z.object({
  /**
   * The unique identifier for the lead
   * @default {Generated by database}
   */
  id: z.string(),
  /**
   * page name
   */
  name: z.nativeEnum(PageName),
  /**
   * home page locale
   */
  locale: z.nativeEnum(Locale),
  /**
   * whether page is published
   */
  isPublished: z.boolean(),
  headerId: z.string().nullish(),
  sectionGalleryId: z.string().nullish(),
  sectionCatalogId: z.string().nullish(),
  footerId: z.string().nullish(),
  sectionTestimonialsId: z.string().nullish(),
})

export interface CompletePage extends z.infer<typeof PageModel> {
  header?: CompleteHeader | null
  sectionGallery?: CompleteSectionGallery | null
  sectionCatalog?: CompleteSectionCatalog | null
  footer?: CompleteFooter | null
  sectionTestimonials?: CompleteSectionTestimonials | null
}

/**
 * RelatedPageModel contains all relations on your model in addition to the scalars
 *
 * NOTE: Lazy required in case of potential circular dependencies within schema
 */
export const RelatedPageModel: z.ZodSchema<CompletePage> = z.lazy(() => PageModel.extend({
  /**
   * page header
   */
  header: RelatedHeaderModel.nullish(),
  /**
   * page gallery section
   */
  sectionGallery: RelatedSectionGalleryModel.nullish(),
  /**
   * page catalog section
   */
  sectionCatalog: RelatedSectionCatalogModel.nullish(),
  /**
   * page footer
   */
  footer: RelatedFooterModel.nullish(),
  /**
   * page testimonials section
   */
  sectionTestimonials: RelatedSectionTestimonialsModel.nullish(),
}))
