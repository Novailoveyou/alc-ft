import * as z from 'zod'
import { Locale, PageName } from '@prisma/client'
import {
  CompletePhoneNumer,
  RelatedPhoneNumerModel,
  CompleteEmail,
  RelatedEmailModel,
  CompleteCategory,
  RelatedCategoryModel,
  CompleteSlide,
  RelatedSlideModel,
  CompleteForm,
  RelatedFormModel,
  CompleteHeader,
  RelatedHeaderModel,
  CompleteFooter,
  RelatedFooterModel,
  CompleteProduct,
  RelatedProductModel
} from './index'

export const ButtonModel = z.object({
  /**
   * The unique identifier for the record
   * @default {Generated by database}
   */
  id: z.string(),
  /**
   * locale of the record
   * @default {ru}
   */
  locale: z.nativeEnum(Locale),
  /**
   * whether record is published
   * @default {false}
   */
  isPublished: z.boolean(),
  /**
   * date of record creation
   * @default {now()}
   */
  createdAt: z.date(),
  /**
   * date of record update
   * @default {now()}
   */
  updatedAt: z.date(),
  /**
   * button text
   */
  text: z.string().trim().min(1).max(80),
  phoneNumberToId: z.string().nullish(),
  emailToId: z.string().nullish(),
  /**
   * if button is intended to be a link, then linkTo is the link
   */
  linkTo: z.nativeEnum(PageName).nullish(),
  /**
   * if button is intended to be a language change, then localeTo is the language
   */
  localeTo: z.nativeEnum(Locale).nullish()
})

export interface CompleteButton extends z.infer<typeof ButtonModel> {
  phoneNumberTo?: CompletePhoneNumer | null
  emailTo?: CompleteEmail | null
  categories: CompleteCategory[]
  slides: CompleteSlide[]
  forms: CompleteForm[]
  headers: CompleteHeader[]
  footers: CompleteFooter[]
  products: CompleteProduct[]
}

/**
 * RelatedButtonModel contains all relations on your model in addition to the scalars
 *
 * NOTE: Lazy required in case of potential circular dependencies within schema
 */
export const RelatedButtonModel: z.ZodSchema<CompleteButton> = z.lazy(() =>
  ButtonModel.extend({
    /**
     * if button is intended to be a trigger to phone call, then phoneNumberTo is the number to call
     */
    phoneNumberTo: RelatedPhoneNumerModel.nullish(),
    /**
     * if button is intended to be a trigger to email, then emailTo is the email to send to
     */
    emailTo: RelatedEmailModel.nullish(),
    /**
     * categories with this button
     */
    categories: RelatedCategoryModel.array(),
    /**
     * slides with this button
     */
    slides: RelatedSlideModel.array(),
    /**
     * forms with this button
     */
    forms: RelatedFormModel.array(),
    /**
     * headers with this button
     */
    headers: RelatedHeaderModel.array(),
    /**
     * footers with this button
     */
    footers: RelatedFooterModel.array(),
    /**
     * products with this button
     */
    products: RelatedProductModel.array()
  })
)
