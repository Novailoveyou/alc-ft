import * as z from "zod"
import { Locale } from "@prisma/client"
import { CompleteButton, RelatedButtonModel, CompleteFooter, RelatedFooterModel } from "./index"

export const FormModel = z.object({
  /**
   * The unique identifier for the form
   * @default {Generated by database}
   */
  id: z.string(),
  /**
   * form locale
   */
  locale: z.nativeEnum(Locale),
  /**
   * whether form is published
   */
  isPublished: z.boolean(),
  /**
   * form title
   */
  title: z.string().trim().min(3).max(60),
  /**
   * form description
   */
  description: z.string().trim().min(3).max(120),
  /**
   * is user name input field displayed on the form
   */
  isName: z.boolean().nullish(),
  /**
   * is user phone number input field displayed on the form
   */
  isPhoneNumber: z.boolean(),
  /**
   * is email input field displayed on the form
   */
  isEmail: z.boolean().nullish(),
  /**
   * is user agreement input field displayed on the form
   */
  isAgreement: z.boolean(),
  buttonId: z.string(),
})

export interface CompleteForm extends z.infer<typeof FormModel> {
  button: CompleteButton
  footers: CompleteFooter[]
}

/**
 * RelatedFormModel contains all relations on your model in addition to the scalars
 *
 * NOTE: Lazy required in case of potential circular dependencies within schema
 */
export const RelatedFormModel: z.ZodSchema<CompleteForm> = z.lazy(() => FormModel.extend({
  /**
   * form button
   */
  button: RelatedButtonModel,
  /**
   * footers with this form
   */
  footers: RelatedFooterModel.array(),
}))
