import * as z from "zod"
import { Locale } from "@prisma/client"
import { CompleteButton, RelatedButtonModel } from "./index"

export const PhoneNumerModel = z.object({
  /**
   * The unique identifier for the record
   * @default {Generated by database}
   */
  id: z.string(),
  /**
   * locale of the record
   * @default {ru}
   */
  locale: z.nativeEnum(Locale),
  /**
   * whether record is published
   * @default {false}
   */
  isPublished: z.boolean(),
  /**
   * date of record creation
   * @default {now()}
   */
  createdAt: z.date(),
  /**
   * date of record update
   * @default {now()}
   */
  updatedAt: z.date(),
  /**
   * phone value
   */
  value: z.string().trim().min(1).max(120),
  /**
   * phone label
   */
  label: z.string().trim().min(1).max(120).optional().nullish(),
})

export interface CompletePhoneNumer extends z.infer<typeof PhoneNumerModel> {
  buttons: CompleteButton[]
}

/**
 * RelatedPhoneNumerModel contains all relations on your model in addition to the scalars
 *
 * NOTE: Lazy required in case of potential circular dependencies within schema
 */
export const RelatedPhoneNumerModel: z.ZodSchema<CompletePhoneNumer> = z.lazy(() => PhoneNumerModel.extend({
  /**
   * buttons with this phone number
   */
  buttons: RelatedButtonModel.array(),
}))
