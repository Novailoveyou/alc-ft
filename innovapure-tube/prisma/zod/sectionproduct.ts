import * as z from "zod"
import { Locale } from "@prisma/client"
import { CompleteProduct, RelatedProductModel, CompletePage, RelatedPageModel } from "./index"

export const SectionProductModel = z.object({
  /**
   * The unique identifier for the record
   * @default {Generated by database}
   */
  id: z.string(),
  locale: z.nativeEnum(Locale),
  isPublished: z.boolean(),
  createdAt: z.date(),
  updatedAt: z.date(),
  productId: z.string(),
})

export interface CompleteSectionProduct extends z.infer<typeof SectionProductModel> {
  product: CompleteProduct
  pages: CompletePage[]
}

/**
 * RelatedSectionProductModel contains all relations on your model in addition to the scalars
 *
 * NOTE: Lazy required in case of potential circular dependencies within schema
 */
export const RelatedSectionProductModel: z.ZodSchema<CompleteSectionProduct> = z.lazy(() => SectionProductModel.extend({
  /**
   * product
   */
  product: RelatedProductModel,
  /**
   * pages with this section
   */
  pages: RelatedPageModel.array(),
}))
