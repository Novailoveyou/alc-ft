import * as z from "zod"
import { Locale } from "@prisma/client"
import { CompleteSlide, RelatedSlideModel, CompleteCatalogCard, RelatedCatalogCardModel, CompleteTestimonial, RelatedTestimonialModel } from "./index"

export const ImageModel = z.object({
  /**
   * The unique identifier for the lead
   * @default {Generated by database}
   */
  id: z.string(),
  /**
   * link to the image
   */
  src: z.string().trim().min(3).max(3000),
  /**
   * alternative text for the image
   */
  alt: z.string().trim().min(2).max(5000).optional().nullish(),
  /**
   * user locale
   */
  locale: z.nativeEnum(Locale),
  /**
   * whether image is published
   */
  isPublished: z.boolean(),
})

export interface CompleteImage extends z.infer<typeof ImageModel> {
  slides: CompleteSlide[]
  catalogCards: CompleteCatalogCard[]
  testimonials: CompleteTestimonial[]
}

/**
 * RelatedImageModel contains all relations on your model in addition to the scalars
 *
 * NOTE: Lazy required in case of potential circular dependencies within schema
 */
export const RelatedImageModel: z.ZodSchema<CompleteImage> = z.lazy(() => ImageModel.extend({
  /**
   * slides with this image
   */
  slides: RelatedSlideModel.array(),
  /**
   * catalogCards with this image
   */
  catalogCards: RelatedCatalogCardModel.array(),
  /**
   * testimonials with this image
   */
  testimonials: RelatedTestimonialModel.array(),
}))
