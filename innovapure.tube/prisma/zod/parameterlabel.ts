import * as z from "zod"
import { Locale } from "@prisma/client"
import { CompleteImage, RelatedImageModel, CompleteParameter, RelatedParameterModel } from "./index"

export const ParameterLabelModel = z.object({
  /**
   * The unique identifier for the record
   * @default {Generated by database}
   */
  id: z.string(),
  locale: z.nativeEnum(Locale),
  isPublished: z.boolean(),
  createdAt: z.date(),
  updatedAt: z.date(),
  /**
   * parameter label name
   */
  name: z.string().trim().min(1).max(240),
  imageId: z.string(),
})

export interface CompleteParameterLabel extends z.infer<typeof ParameterLabelModel> {
  image: CompleteImage
  parameters: CompleteParameter[]
}

/**
 * RelatedParameterLabelModel contains all relations on your model in addition to the scalars
 *
 * NOTE: Lazy required in case of potential circular dependencies within schema
 */
export const RelatedParameterLabelModel: z.ZodSchema<CompleteParameterLabel> = z.lazy(() => ParameterLabelModel.extend({
  image: RelatedImageModel,
  parameters: RelatedParameterModel.array(),
}))
