import * as z from "zod"
import { Locale } from "@prisma/client"
import { CompleteCatalogCard, RelatedCatalogCardModel, CompletePage, RelatedPageModel } from "./index"

export const SectionCatalogModel = z.object({
  /**
   * The unique identifier for the lead
   * @default {Generated by database}
   */
  id: z.string(),
  /**
   * section locale
   */
  locale: z.nativeEnum(Locale),
  /**
   * whether SectionCatalog is published
   */
  isPublished: z.boolean(),
  /**
   * section index
   */
  index: z.number().int(),
  /**
   * section title
   */
  title: z.string().trim().min(1).max(60),
})

export interface CompleteSectionCatalog extends z.infer<typeof SectionCatalogModel> {
  cards: CompleteCatalogCard[]
  pages: CompletePage[]
}

/**
 * RelatedSectionCatalogModel contains all relations on your model in addition to the scalars
 *
 * NOTE: Lazy required in case of potential circular dependencies within schema
 */
export const RelatedSectionCatalogModel: z.ZodSchema<CompleteSectionCatalog> = z.lazy(() => SectionCatalogModel.extend({
  /**
   * sections cards
   */
  cards: RelatedCatalogCardModel.array(),
  /**
   * pages with this section
   */
  pages: RelatedPageModel.array(),
}))
